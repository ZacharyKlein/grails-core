# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Grails CI

on:
  push:
    tags-ignore:
      - '**'
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ['8', '11', '14']
    steps:
    - name: Get branch info
      id: branch_name
      run: |
        echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
        echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
        echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}
    - name: Echo branch info
      run: |
        echo $SOURCE_NAME
        echo $SOURCE_BRANCH
        echo $SOURCE_TAG
      env:
        SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
        SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
        SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Compile classes with Gradle
      run: ./gradlew classes
    - name: Compile tests with Gradle
      run: ./gradlew testClasses
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Runs tests
      run: ./gradlew grails-test-suite-persistence:test grails-test-suite-uber:test grails-test-suite-web:test
    - name: Runs more tests
      run: ./gradlew check -x grails-test-suite-persistence:test -x grails-test-suite-uber:test -x grails-test-suite-web:test
  deploy:
    needs: test
    runs-on: ubuntu-latest
#    if: success() && github.event_name == 'push' && matrix.java == '8'
#    steps:
#      - name: "Configure Git"
#        run:
#          git config --global user.name "$GIT_NAME"
#          git config --global user.email "$GIT_EMAIL"
#      - name: "Publish snapshot"
#        run: ./gradlew -Psigning.keyId="$SIGNING_KEY" -Psigning.password="$SIGNING_PASSPHRASE" -Psigning.secretKeyRingFile="${TRAVIS_BUILD_DIR}/secring.gpg" publish || EXIT_STATUS=$?

